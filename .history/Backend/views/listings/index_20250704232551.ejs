<% layout("./layouts/boilerplate") %>

<!-- Bootstrap & Font Awesome CDN -->
 <link rel="stylesheet" href="/styles.css">

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" crossorigin="anonymous">

<style>
  .category-item {
    transition: opacity 0.3s ease;
    opacity: 1;
    cursor: pointer;
  }

  .category-item:hover {
    opacity: 0.7;
  }

  .listing-card {
    transition: transform 0.2s ease;
    position: relative;
  }

  .listing-card:hover {
    transform: scale(1.02);
  }

  .card-img-top {
    object-fit: cover;
  }

  .price-box {
    position: absolute;
    top: 10px;
    right: 10px;
    background-color: #ff385c;
    color: white;
    padding: 5px 10px;
    border-radius: 20px;
    font-size: 0.9rem;
    font-weight: bold;
    min-width: 50px;
    display: inline-flex;
    justify-content: center;
    align-items: center;
    white-space: nowrap;
  }
</style>

<div class="container my-3">
  <div class="d-flex justify-content-between align-items-center flex-wrap gap-2 p-3">
    <!-- Category Filters -->
    <div class="d-flex flex-wrap gap-4">
      <% const categories = [
        { icon: "fa-fire", text: "Trending" },
        { icon: "fa-bed", text: "Rooms" },
        { icon: "fa-city", text: "Iconic Cities" },
        { icon: "fa-mountain", text: "Hill Stations" },
        { icon: "fa-person-swimming", text: "Amazing Pools" },
        { icon: "fa-fort-awesome", text: "Castle" },
        { icon: "fa-campground", text: "Camping" },
        { icon: "fa-cow", text: "Farms" },
        { icon: "fa-snowflake", text: "Arctic", isRegular: true },
        { icon: "fa-igloo", text: "Domes" },
        { icon: "fa-ship", text: "Boats" },
      ]; %>

      <% for (let cat of categories) { %>
        <div class="text-center category-item">
          <i class="<%= cat.isRegular ? 'fa-regular' : 'fa-solid' %> <%= cat.icon %> fa-lg mb-1"></i><br>
          <small><%= cat.text %></small>
        </div>
      <% } %>
    </div>

    <!-- Tax Switch -->
    <div class="d-flex align-items-center border rounded-pill px-3 py-2 shadow-sm bg-light" style="gap: 1rem; font-size: 1rem;">
      <label for="taxSwitch" class="mb-0 fw-medium">Display total before taxes</label>
      <div class="form-check form-switch m-0" style="transform: scale(1.5);">
        <input class="form-check-input" type="checkbox" id="taxSwitch">
      </div>
    </div>
  </div>

  <!-- Listings -->
  <div class="row row-cols-lg-3 row-cols-md-2 row-cols-sm-1 mt-3">
    <% for (let listing of listings) { %>
      <div class="col mb-4">
        <a href="/listings/<%= listing._id %>" class="listing-link">
          <div class="card listing-card">
            <img
              src="<%= listing.image?.url || listing.image %>"
              class="card-img-top"
              alt="listing_image"
              style="height: 20rem;"
            >
            <div class="card-body">
              <h5 class="card-title"><%= listing.title %></h5>
              <p class="card-text">₹<%= listing.price.toLocaleString("en-IN") %> / night</p>
              <div class="price-box">₹<%= listing.price.toLocaleString("en-IN") %></div>
            </div>
          </div>
        </a>
      </div>
    <% } %>
  </div>
</div>

<!-- JS Logic -->
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const taxSwitch = document.getElementById('taxSwitch');
    const listingCards = document.querySelectorAll('.listing-card');

    listingCards.forEach(card => {
      const priceText = card.querySelector('.card-text')?.textContent;
      const basePrice = parseFloat(priceText.replace('₹', '').replace(/,/g, '')) || 0;
      card.dataset.basePrice = basePrice;
    });

    taxSwitch.addEventListener('change', () => {
      listingCards.forEach(card => {
        const basePrice = parseFloat(card.dataset.basePrice);
        const priceElement = card.querySelector('.card-text');
        const priceBoxElement = card.querySelector('.price-box');
        let finalPrice = taxSwitch.checked ? basePrice : basePrice * 1.18;
        const formattedPrice = `₹${Math.round(finalPrice).toLocaleString('en-IN')}`;
        priceElement.textContent = `${formattedPrice} / night`;
        priceBoxElement.textContent = formattedPrice;
      });
    });
  });

  // Category click
  document.querySelectorAll(".category-item").forEach(item => {
    item.addEventListener("click", () => {
      const category = item.querySelector("small").textContent.trim();
      fetchListingsByCategory(category);
    });
  });

  function fetchListingsByCategory(category) {
    fetch(`/api/listings?category=${encodeURIComponent(category)}`)
      .then(res => res.json())
      .then(data => {
        console.log("Fetched listings for:", category, data);
        // displayListings(data); ← implement this if needed
      })
      .catch(err => console.error("Error fetching listings:", err));
  }
</script>
